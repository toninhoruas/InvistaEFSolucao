// <auto-generated />
using InvistaEFSolucao.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace InvistaEFSolucao.Migrations
{
    [DbContext(typeof(BloggingContext))]
    [Migration("20180320032349_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("InvistaEFSolucao.Models.Blog", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Url");

                    b.HasKey("BlogId");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("InvistaEFSolucao.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Bairro");

                    b.Property<string>("CEP");

                    b.Property<string>("CNPJ");

                    b.Property<string>("Cidade");

                    b.Property<string>("Complemento");

                    b.Property<int?>("ContatoComercialContatoID");

                    b.Property<int?>("ContatoTecnicoContatoID");

                    b.Property<string>("Endereco");

                    b.Property<string>("InscricaoEstadual");

                    b.Property<string>("NomeFantasia");

                    b.Property<string>("Numero");

                    b.Property<string>("RazaoSocial");

                    b.Property<string>("UF");

                    b.HasKey("ClienteId");

                    b.HasIndex("ContatoComercialContatoID");

                    b.HasIndex("ContatoTecnicoContatoID");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("InvistaEFSolucao.Models.Contato", b =>
                {
                    b.Property<int>("ContatoID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("NomePessoa");

                    b.Property<string>("Setor");

                    b.Property<string>("Telefone");

                    b.Property<int>("Tipo");

                    b.Property<string>("email");

                    b.HasKey("ContatoID");

                    b.ToTable("Contatos");
                });

            modelBuilder.Entity("InvistaEFSolucao.Models.Empresa", b =>
                {
                    b.Property<int>("EmpresaId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Bairro");

                    b.Property<string>("CEP");

                    b.Property<string>("CNPJ");

                    b.Property<string>("CaminhoLogoEmpresa");

                    b.Property<string>("Cidade");

                    b.Property<string>("Complemento");

                    b.Property<int?>("ContatoComercialContatoID");

                    b.Property<string>("Endereco");

                    b.Property<string>("InscricaoEstadual");

                    b.Property<string>("NomeFantasia");

                    b.Property<string>("Numero");

                    b.Property<string>("RazaoSocial");

                    b.Property<string>("UF");

                    b.HasKey("EmpresaId");

                    b.HasIndex("ContatoComercialContatoID");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("InvistaEFSolucao.Models.Equipamento", b =>
                {
                    b.Property<int>("EquipamentoID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Modelo");

                    b.Property<string>("NomeEquipamento");

                    b.Property<string>("NomeFabricante");

                    b.Property<string>("Serie");

                    b.HasKey("EquipamentoID");

                    b.ToTable("Equipamentos");
                });

            modelBuilder.Entity("InvistaEFSolucao.Models.IndicadorBiologico", b =>
                {
                    b.Property<int>("IndicadorBiologicoID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CorOriginal");

                    b.Property<string>("CorPosterior");

                    b.Property<string>("Microorganismo");

                    b.Property<string>("Produto");

                    b.Property<string>("ValorD");

                    b.Property<string>("ValorN");

                    b.Property<string>("ValorZ");

                    b.HasKey("IndicadorBiologicoID");

                    b.ToTable("IndicadoresBiologicos");
                });

            modelBuilder.Entity("InvistaEFSolucao.Models.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BlogId");

                    b.Property<string>("Content");

                    b.Property<string>("Title");

                    b.HasKey("PostId");

                    b.HasIndex("BlogId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("InvistaEFSolucao.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("NomeUsuario");

                    b.Property<string>("SenhaUsuario");

                    b.Property<string>("emailUsuario");

                    b.Property<string>("loginUsuario");

                    b.HasKey("UsuarioID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("InvistaEFSolucao.Models.Cliente", b =>
                {
                    b.HasOne("InvistaEFSolucao.Models.Contato", "ContatoComercial")
                        .WithMany()
                        .HasForeignKey("ContatoComercialContatoID");

                    b.HasOne("InvistaEFSolucao.Models.Contato", "ContatoTecnico")
                        .WithMany()
                        .HasForeignKey("ContatoTecnicoContatoID");
                });

            modelBuilder.Entity("InvistaEFSolucao.Models.Empresa", b =>
                {
                    b.HasOne("InvistaEFSolucao.Models.Contato", "ContatoComercial")
                        .WithMany()
                        .HasForeignKey("ContatoComercialContatoID");
                });

            modelBuilder.Entity("InvistaEFSolucao.Models.Post", b =>
                {
                    b.HasOne("InvistaEFSolucao.Models.Blog", "Blog")
                        .WithMany("Posts")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
